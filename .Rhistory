ymd(dt2)
update(this_moment, )
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 20, minutes = 59)
this_moment
?now
nyc <- now("NYC")
now("America/New_York")
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
update(depart, hours = 17, minures = 34)
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
skip()
skip()
skip()
skip()
sampleTimes
first <- year(sampleTimes)
second <- sampleTimes[first]
sum(second)
sum(first)
first <- year(sampleTimes) == 2012
second <- sampleTimes[first]
sum(first)
third <- wday(second) == 2
sum(third)
second[third]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "3.csv")
data <- read.csv("3.csv")
data <- tbl_df(data)
library(dplyr)
data <- tbl_df(data)
data
splitNames <- strsplit(names(data), "wgtp")
splitNames[123]
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summmary(pollution$pm25)
summary(pollution$pm25)
play()
seq <- 1:100
quantile(seq, 0.5)
quantile(seq, 0.1)
quantile(seq, 1)
quantile(seq, 0.75)
seq <- 1:99
quantile(seq, 0.75)
?quantile
nxt()
quantile(ppm)
play()
seq <- 1:100
quantile(seq)
seq <- 0:99
quantile(seq)
seq <- 1:101
quantile(seq)
nxt()
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
head(low)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(ppm)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number if Counties in Each Region")
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pollution, pm25 ~ region, col = "red")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(nfrow = c(2, 1), margin = c(4, 4, 2, 1))
par(nfrow = c(2, 1), mar = c(4, 4, 2, 1))
par(mfrow = c(2, 1), margin = c(4, 4, 2, 1))
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25m col = "green")
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west"), col = "green")
hist(subset(pollution, region == "west")$pm24, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
plot(pollution, latitude, pm24)
plot(pollution, latitude, pm25)
poluntion.plot(latitude, pm24)
poluntion.plot(latitude, pm25)
3 > 2
with(pollution, plot(latitude, pm24))
with(pollution, plot(latitude, pm25))
abline(lwd = 2, lty = 2)
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
?abline
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution, region = "west")
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
play()
getwd()
nxt()
with(faithful. plot(eruptions, waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, "geyserplot.png")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(car$dist), "SWIRL rules!")
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
library(swirl)
swirl()
bye()
swirl()
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3, 3))
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g + geom_line()
g + geom_line() + ylim(-3, 3)
g + geom_line() + coord_cartesian()
g + geom_line() + coord_cartesian(ylim = c(-3, 3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm"m se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497 / 30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497 / 30, fill = cut)
play()
qplot(price, data = diamonds, binwidth = 18497 / 60, fill = cut)
qplot(price, data = diamonds, binwidth = 18497 / 120, fill = cut)
qplot(price, data = diamonds, binwidth = 18497 / 180, fill = cut)
qplot(price, data = diamonds, binwidth = 18497 / 320, fill = cut)
nxt()
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth", method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom = c("point", "smooth"))
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat, price, data = diamonds, color = cut, facets = . ~ cut) + geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1 / 3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1 / 3) + facet_grid(cut ~ car2)
diamonds[myd, ]
g + geom_point(alpha = 1 / 3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(. ~ cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
xyplot(weight ~ Time | Diet)
str(BodyWeight)
library(lattice)
library(datasets)
data(airquality)
p <- xyplot(Ozone ~ Wind | factor(Month), data = airquality)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5, 1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5, 1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
pathtofile("myLabel.R", local = TRUE)
source(pathtofile("myLabel.R"), local = TRUE)
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price ~ carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price ~ carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
data("airquality")
View(airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
qplot(votes, rating, data = movies)
library(ggplot2)
qplot(votes, rating, data = movies)
library(ggplot2movies)
install.packages(ggplot2movies)
library(ggplot2)
library(ggplot2movies)
intall.packages(ggplot2movies)
panel.text("HEeeeeeeeeeeeeeeeeeey")
?panel.text
library(swirl)
swirl()
sample(colors(), 10)
play()
?sample
head(colors())
str(colors())
nxt()
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0, 1, len = 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xcc
p2 <- colorRampPalette("red", "yellow")
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
play()
showMe
nxt()
p1(20)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x, y, pch = 19, col = rbd(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5))
plot(x, y, pch = 19, col = rgb(0, .5, .5, .3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(3))
showMe(pal(20))
image(volcano, col = pal(20))
image(col = p1(20))
image(volcano, col = p1(20))
library(swirl)
swirl()
dist(dataFrame)
play()
hclust(dataFrame)
dataFrame
nxt()
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
play()
library(ggplot2)
ggplot(hc)
qplot(hc)
nxt()
plot(as.dendrogram(hc))
abline(h = 1.5, col = "blue")
abline(h = 0.4, col = "red")
5
12
abline(h = 0.4, col = "green")
dist(dFsm)
hc
heatMap(dataMatrix, col = cm.colors(25))
heatmap(dataMatrix, col = cm.colors(25))
play()
dataMatrix
heatmap(dataMatrix)
nxt()
heatmap(mt)
mt
plot(denmt)
distmt
library(Swirl)
library(swirl)
swirl()
cmat
points(cx, cy, col = c("red", "orange", "purple"), pch = 3, cex = 2, lwd = 2)
mdist(x, y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch = 19, cex = 2, col = cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x, y, newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch = 19, cex = 12, col = cols1[newClust])
points(x, y, pch = 19, cex = 12, col = cols1[newClust2])
points(x, y, pch = 19, cex = 2, col = cols1[newClust2])
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x, y, col = kmObj$cluster, pch = 19, cex = 2)
points(kmObj$centers, col = c("black", "red", "green"), pch = 3, cex = 3, lwd = 3)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
plot(x, y, col = kmeans(dataFrame, 6)$cluster, pch = 19, cex = 2)
swirl()
set.seed(12345)
par(mar = rep(0.2, 4))
dataMatrix <- matrix(rnorm(400), nrow = 40)
dataMatrix
heatmap(dataMatrix)
?t
image(1:10, 1:40, dataMatrix)
heatmap(dataMatrix)
?outer
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
ьфе
mat
svd(mat)
matv %*% matu
matu %*% diag %*% t(matv)
play()
x <- c(5:7, 12, 19)
scale(x)
mean(x)
5 / 9.8
5 - 9.8 / 9.8
(5 - 9.8) / 9.8
(5 - 9.8) / 5
x
scale(x)
(5 - 9.8) / (-0.82)
median(x)
y <- 5:8
scale(x)
scale(y)
y <- 5:9
scale(y)
(9 - 7) / 9
(9 - 7) / 1.581139
sd(y)
x <- c(1:3, 2:4, 10)
len(x)
length(x)
y <- c(1:6, 0)
y <- c(0, 7:9, 1:3)
m <- matrix(x, y)
?matrix
m <- matrix(x, y, nrow = 7)
m <- matrix(x, y, nrow = 7, ncol = 7)
m
m <- matrix(x = x, y = y, nrow = 7, ncol = 7)
m <- matrix(c(x, y), nrow = 7, ncol = 7)
m
scale(m)
heatmap(m)
?rnorm
x <- rnorm(10)
x
x <- rnorm(100)
m <- matrix(x, nrow = 10)
m
m <- matrix(rnorm(25), nrow = 5)
heatmap(m)
m
scale(m)
dvs(m)
svd(m)
heatmap(svd(m))
heatmap(svd(m)$u)
heatmap(svd(m)$v)
heatmap(svd(m)$d)
?random
sample(1:20, 5)
x <- sample(1:20, 36)
x <- sample(1:20, 36, replace = TRUE)
m <- matrix(x, nrow = 6)
m
heatmap(m)
scale(m)
svdObject <- svd(m)
svdObject$u %*% t(svdObject$v) %*% svdObject$d
svdObject$v %*% t(svdObject$u) %*% svdObject$d
svdObject$d %*% svdObject$v %*% t(svdObject$u)
svdObject$d %*% svdObject$u %*% t(svdObject$v)
nxt()
info()
svd(scale(mat))
prcomp(scale(mat))
skip()
bye()
library(swirl)
swirl()
dim(ssd)
names(ssd[, 562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub1[1:12, ])
names(sub1[, 1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[, 1:3])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[, 10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[, -c(562, 563)]))
svd1$u
dim(svd1$u)
maxCon <- which.max(svd1$v[, 2])
library(kernlab)
install.packages(kernlab)
install.packages(kernlab)
data(spam)
install.packages("kernlab")
data(spam)
libarary(kernlab)
library(kernlab)
data(spam)
library(dplyr)
head(spam)
str(spam)
library(kernlab)
data(spam)
set.seed(88005553535)
set.seed(228)
size(spam)
str(size)
str(spam)
trainIndicator <- rbinom(nrow(spam), size = 1, prob = 0.5)
table(trainIndicator)
spamTrain <- spam[trainIndicator == 1, ]
spamTest <- spam[trainIndicator == 0, ]
str(spamTest)
names(trainSpam)
names(spamTrain)
table(spamTrain$type)
?t
?hist
setwd("C:/Users/Home/Desktop/Coursera/WorkingDirectory/Reproducible Research/Week 1/Course Project 1")
info <- read.csv("activity.csv")
View(info)
View(info)
info_grouped_by_time <- group_by(info, interval)
info_by_time <- summarise(info_grouped_by_time,
average_steps = mean(steps, na.rm = TRUE))
library(dplyr)
info_grouped_by_time <- group_by(info, interval)
info_by_time <- summarise(info_grouped_by_time,
average_steps = mean(steps, na.rm = TRUE))
View(info_by_time)
